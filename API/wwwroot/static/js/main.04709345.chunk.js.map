{"version":3,"sources":["app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","resolve","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","value1","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","setImage","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActivityTab","loadProfile","photo","photos","isMain","p","activityStore","followingCount","loadFollowings","loadUserActivities","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","Statistic","Divider","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.04709345.chunk.js","sourcesContent":["import {Profile} from \"./profile\";\n\nexport interface Activity {\n    id: string;\n    title: string;\n    date: Date | null;\n    description: string;\n    category: string;\n    city: string;\n    venue: string;\n    hostUsername?: string;\n    isCancelled: boolean;\n    isGoing: boolean;\n    isHost: boolean;\n    host?: Profile;\n    attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n    constructor(init?: ActivityFormValues) {\n        Object.assign(this, init);\n    }\n}\n\nexport class ActivityFormValues {\n    id?: string = undefined;\n    title: string = '';\n    category: string = '';\n    description: string = '';\n    date: Date | null = null;\n    city: string = '';\n    venue: string = '';\n\n    constructor(activity?: ActivityFormValues) {\n        if(activity) {\n            this.id = activity.id;\n            this.title = activity.title;\n            this.category = activity.category;\n            this.description = activity.description;\n            this.date = activity.date;\n            this.city = activity.city;\n            this.venue = activity.venue;\n        }\n    }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    data: T;\n    pagination: Pagination;\n\n    constructor(data: T, pagination: Pagination) {\n        this.data = data;\n        this.pagination = pagination;\n    }\n}\n\nexport class PagingParams {\n    pageNumber;\n    pageSize;\n\n    constructor(pageNumber = 1, pageSize = 2) {\n        this.pageNumber = pageNumber;\n        this.pageSize = pageSize;\n    }\n\n}\n","import axios, {AxiosError, AxiosResponse} from \"axios\";\nimport {Activity, ActivityFormValues} from \"../models/activity\";\nimport {toast} from \"react-toastify\";\nimport {history} from \"../../index\";\nimport {store} from \"../stores/store\";\nimport {User, UserFormValues} from \"../models/user\";\nimport {Photo, Profile, UserActivity} from \"../models/profile\";\nimport {PaginatedResult} from \"../models/pagination\";\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve => {\n        setTimeout(resolve, delay);\n    }))\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if(token) config.headers.Authorization = `Bearer ${token}`\n    return config;\n});\n\naxios.interceptors.response.use(async response => {\n    if(process.env.NODE_ENV === 'development') await sleep(1000);\n    const pagination = response.headers['pagination'];\n    if(pagination) {\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n        return response as AxiosResponse<PaginatedResult<any>>\n    }\n\n    return response;\n}, (error: AxiosError) => {\n    const {data, status, config} = error.response!;\n    switch (status) {\n        case 400:\n            if(typeof data === 'string') {\n                toast.error(data);\n            }\n\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')) {\n                history.push('/not-found');\n            }\n\n            if (data.errors) {\n                const modalStateErrors = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modalStateErrors.push(data.errors[key]);\n                    }\n                }\n\n                throw modalStateErrors.flat();\n            }\n            toast.error('bad request');\n            break;\n        case 401:\n            toast.error('unauthorised');\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(data);\n            history.push('/server-error')\n            break;\n    }\n\n    return Promise.resolve(error);\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', {params})\n        .then(responseBody),\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user)\n}\n\nconst Profiles = {\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n    uploadPhoto: (file: Blob) => {\n        let formData = new FormData();\n        formData.append('File', file);\n        return axios.post<Photo>('photos', formData, {\n            headers: {'Content-type': 'multipart/form-data'}\n        })\n    },\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n    listFollowings: (username: string, predicate: string) =>\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n    listActivities: (username: string, predicate: string) =>\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n    Activities,\n    Account,\n    Profiles\n}\n\nexport default agent;\n","import {User} from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}\n","import {makeAutoObservable, reaction, runInAction} from \"mobx\";\nimport {Activity, ActivityFormValues} from \"../models/activity\";\nimport agent from \"../api/agent\";\nimport {format} from \"date-fns\";\nimport {store} from \"./store\";\nimport {Profile} from \"../models/profile\";\nimport {Pagination, PagingParams} from \"../models/pagination\";\n\nexport default class ActivityStore {\n    activityRegistry = new Map<string, Activity>();\n    selectedActivity: Activity | undefined = undefined;\n    editMode = false;\n    loading = false;\n    loadingInitial = false;\n    pagination: Pagination | null = null;\n    pagingParams = new PagingParams();\n    predicate = new Map().set('all', true);\n\n    constructor() {\n        makeAutoObservable(this)\n\n        reaction(\n            () => this.predicate.keys(),\n            () => {\n                this.pagingParams = new PagingParams();\n                this.activityRegistry.clear();\n                this.loadActivities();\n            }\n        )\n    }\n\n    setPagingParams = (pagingParams: PagingParams) => {\n        this.pagingParams = pagingParams;\n    }\n\n    setPredicate = (predicate: string, value: string | Date) => {\n        const resetPredicate = () => this.predicate.forEach(((value1, key) => {\n            if (key !== 'startDate') this.predicate.delete(key);\n        }));\n\n        switch (predicate) {\n            case 'all':\n                resetPredicate();\n                this.predicate.set('all', true);\n                break;\n            case 'isGoing':\n                resetPredicate();\n                this.predicate.set('isGoing', true);\n                break;\n            case 'isHost':\n                resetPredicate();\n                this.predicate.set('isHost', true);\n                break;\n            case 'startDate':\n                this.predicate.delete('startDate');\n                this.predicate.set('startDate', value);\n        }\n    }\n\n    get axiosParams() {\n        const params = new URLSearchParams();\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\n        params.append('pageSize', this.pagingParams.pageSize.toString());\n        this.predicate.forEach(((value, key) => {\n            if (key === 'startDate') {\n                params.append(key, (value as Date).toISOString());\n            } else {\n                params.append(key, value);\n            }\n        }))\n        return params;\n    }\n\n    get activitiesByDate() {\n        return Array.from(this.activityRegistry.values())\n            .sort((a, b) => a.date!.getTime() - b.date!.getTime());\n    }\n\n    get groupedActivities() {\n        return Object.entries(\n            this.activitiesByDate.reduce((activities, activity) => {\n                const date = format(activity.date!, 'dd MMM yyyy');\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n                return activities;\n            }, {} as { [key: string]: Activity[] }));\n    }\n\n    loadActivities = async () => {\n        this.loadingInitial = true;\n        try {\n            const result = await agent.Activities.list(this.axiosParams);\n            result.data.forEach(activity => {\n                this.setActivity(activity);\n            });\n            this.setPagination(result.pagination);\n            this.setLoadingInitial(false);\n        } catch (error) {\n            console.log(error);\n            this.setLoadingInitial(false);\n        }\n    }\n\n    setPagination = (pagination: Pagination) => {\n        this.pagination = pagination;\n    }\n\n    loadActivity = async (id: string) => {\n        let activity = this.getActivity(id);\n        if (activity) {\n            this.selectedActivity = activity;\n            return activity;\n        } else {\n            this.loadingInitial = true;\n            try {\n                activity = await agent.Activities.details(id);\n                this.setActivity(activity);\n                runInAction(() => {\n                    this.selectedActivity = activity;\n                });\n                this.setLoadingInitial(false);\n                return activity;\n            } catch (e) {\n                console.log(e);\n                this.setLoadingInitial(false)\n            }\n        }\n    }\n\n    private setActivity = (activity: Activity) => {\n        const user = store.userStore.user;\n        if (user) {\n            activity.isGoing = activity.attendees!.some(\n                a => a.username === user.username\n            )\n\n            activity.isHost = activity.hostUsername === user.username;\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n        }\n        activity.date = new Date(activity.date!);\n        this.activityRegistry.set(activity.id, activity);\n    }\n\n    private getActivity = (id: string) => {\n        return this.activityRegistry.get(id);\n    }\n\n    setLoadingInitial = (state: boolean) => {\n        this.loadingInitial = state;\n    }\n\n    createActivity = async (activity: ActivityFormValues) => {\n        const user = store.userStore.user;\n        const attendee = new Profile(user!);\n        try {\n            await agent.Activities.create(activity);\n            const newActivity = new Activity(activity);\n            newActivity.hostUsername = user!.username;\n            newActivity.attendees = [attendee];\n            this.setActivity(newActivity);\n            runInAction(() => {\n                this.selectedActivity = newActivity;\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    updateActivity = async (activity: ActivityFormValues) => {\n        try {\n            await agent.Activities.update(activity);\n            runInAction(() => {\n                if (activity.id) {\n                    let updatedActivity = {...this.getActivity(activity.id), ...activity};\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\n                    this.selectedActivity = updatedActivity as Activity;\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    deleteActivity = async (id: string) => {\n        this.loading = true;\n        try {\n            await agent.Activities.delete(id);\n            runInAction(() => {\n                this.activityRegistry.delete(id);\n                this.loading = false;\n            })\n        } catch (e) {\n            console.log(e);\n            runInAction(() => {\n                this.loading = false;\n            })\n        }\n    }\n\n    updateAttendance = async () => {\n        const user = store.userStore.user;\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                if (this.selectedActivity?.isGoing) {\n                    this.selectedActivity.attendees =\n                        this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n                    this.selectedActivity.isGoing = false;\n                } else {\n                    const attendee = new Profile(user!);\n                    this.selectedActivity?.attendees?.push(attendee);\n                    this.selectedActivity!.isGoing = true;\n                }\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n            })\n        } catch (error) {\n            console.log(error);\n        } finally {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    cancelActivityToggle = async () => {\n        this.loading = true;\n        try {\n            await agent.Activities.attend(this.selectedActivity!.id);\n            runInAction(() => {\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n            });\n\n        } catch (e) {\n            console.log(e);\n        } finally {\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    clearSelectActivity = () => {\n        this.selectedActivity = undefined;\n    }\n\n    updateAttendeeFollowing = (username: string) => {\n        this.activityRegistry.forEach(activity => {\n            activity.attendees.forEach(attendee => {\n                if (attendee.username === username) {\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n                    attendee.following = !attendee.following;\n                }\n            })\n        })\n    }\n}\n","import {User, UserFormValues} from \"../models/user\";\nimport {makeAutoObservable, runInAction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {store} from \"./store\";\nimport {history} from \"../../index\";\n\nexport default class UserStore {\n    user: User | null = null;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n            console.log(user)\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try {\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    register = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => this.user = user);\n            history.push('/activities');\n            store.modalStore.closeModal();\n            console.log(user)\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    setImage = (image: string) => {\n        if (this.user) this.user.image = image;\n    }\n}\n","import {Photo, Profile, UserActivity} from \"../models/profile\";\nimport {makeAutoObservable, runInAction, reaction} from \"mobx\";\nimport agent from \"../api/agent\";\nimport {store} from \"./store\";\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings = false;\n    activeTab = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = [];\n                }\n            }\n        )\n    }\n\n    setActivityTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n\n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            });\n        } catch (e) {\n            console.log(e);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n    uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n\n                this.uploading = false;\n            })\n        } catch (e) {\n            console.log(e);\n            runInAction(() => this.uploading = false);\n        }\n    }\n\n    setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (e) {\n            runInAction(() => this.loading = false);\n            console.log(e);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            });\n        } catch (e) {\n            runInAction(() => {\n                this.loading = false;\n            });\n            console.log(e);\n        }\n    }\n\n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowing(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                if (this.profile &&\n                    this.profile.username !== store.userStore.user?.username &&\n                    this.profile.username === username) {\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                });\n                this.loading = false;\n            });\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    loadFollowings = async (predicate: string) => {\n        this.loadingFollowings = true;\n\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings;\n                this.loadingFollowings = false;\n            });\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingFollowings = false);\n        }\n\n    }\n\n    loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })\n\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            });\n        }\n    }\n\n}\n","import ActivityStore from \"./activityStore\";\nimport {createContext, useContext} from \"react\";\nimport CommonStore from \"./commonStore\";\nimport UserStore from \"./userStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport CommentStore from \"./commentStore\";\n\ninterface Store {\n    activityStore: ActivityStore\n    commonStore: CommonStore\n    userStore: UserStore\n    modalStore: ModalStore\n    profileStore: ProfileStore,\n    commentStore: CommentStore\n}\n\nexport const store: Store = {\n    activityStore: new ActivityStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore(),\n    commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}\n","import {makeAutoObservable, reaction} from \"mobx\";\nimport {ServerError} from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token);\n                } else {\n                    window.localStorage.removeItem('jwt');\n                }\n            }\n        )\n    }\n\n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => {\n        this.token = token;\n    }\n\n    setAppLoaded = () => {\n        this.appLoaded = true;\n    }\n}\n","import {makeAutoObservable} from \"mobx\";\n\ninterface Modal {\n    open: boolean;\n    body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n    modal: Modal = {\n        open: false,\n        body: null\n    }\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    openModal = (content: JSX.Element) => {\n        this.modal.open = true;\n        this.modal.body = content;\n    }\n\n    closeModal = () => {\n        this.modal.open = false;\n        this.modal.body = null;\n    }\n}\n","import {ChatComment} from \"../models/comment\";\nimport {HubConnection, HubConnectionBuilder, LogLevel} from \"@microsoft/signalr\";\nimport {makeAutoObservable, runInAction} from \"mobx\";\nimport {store} from \"./store\";\n\nexport default class CommentStore {\n    comments: ChatComment[] = [];\n    hubConnection: HubConnection | null = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    createHubConnection = (activityId: string) => {\n        if (store.activityStore.selectedActivity) {\n            this.hubConnection = new HubConnectionBuilder()\n                .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\n                    accessTokenFactory: () => store.userStore.user?.token!\n                })\n                .withAutomaticReconnect()\n                .configureLogging(LogLevel.Information)\n                .build();\n\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error));\n            this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n                runInAction(() => {\n                    comments.forEach(comment => {\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\n                    })\n                    this.comments = comments\n                });\n            });\n\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n                runInAction(() => {\n                    comment.createdAt = new Date(comment.createdAt);\n                    this.comments.unshift(comment)\n                });\n            })\n        }\n    }\n\n    stopHubConnection = () => {\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ' + error));\n    }\n\n    clearComments = () => {\n        this.comments = [];\n        this.stopHubConnection();\n    }\n\n    addComment = async (values: any) => {\n        values.activityId = store.activityStore.selectedActivity?.id;\n        try {\n            await this.hubConnection?.invoke('SendComment', values);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n","import React from 'react'\nimport {Button, Menu, Container, Image, Dropdown} from \"semantic-ui-react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {useStore} from \"../stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function NavBar() {\n    const {userStore: {user, logout}} = useStore();\n    return (\n        <Menu inverted fixed={'top'}>\n            <Container>\n                <Menu.Item as={NavLink} to={'/'} exact header>\n                    <img src={\"/assets/logo.png\"} alt={\"logo\"} style={{marginRight: '10px'}}/>\n                    Reactivities\n                </Menu.Item>\n                <Menu.Item as={NavLink} to={'/activities'} name={'Activities'}/>\n                <Menu.Item as={NavLink} to={'/errors'} name={'Errors'}/>\n                <Menu.Item>\n                    <Button as={NavLink} to={'/createActivity'} positive content={'Create Activity'}/>\n                </Menu.Item>\n                <Menu.Item position={'right'}>\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced={'right'}/>\n                    <Dropdown pointing={'top left'} text={user?.displayName}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text={'My Profile'}\n                                           icon={'user'}/>\n                            <Dropdown.Item onClick={logout} text={'Logout'} icon={'power'}/>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    )\n})\n","import React, {SyntheticEvent} from \"react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, Reveal} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\n\ninterface Props {\n    profile: Profile\n}\n\nexport default observer(function FollowButton({profile}: Props) {\n    const {profileStore, userStore} = useStore();\n    const {updateFollowing, loading} = profileStore;\n\n    if (userStore.user?.username === profile.username) return null;\n\n    function handleFollow(e: SyntheticEvent, username: string) {\n        e.preventDefault();\n        profile.following\n            ? updateFollowing(username, false)\n            : updateFollowing(username, true);\n    }\n\n    return (\n        <Reveal animated={'move'}>\n            <Reveal.Content visible style={{width: '100%'}}>\n                <Button\n                    fluid\n                    color={'teal'}\n                    content={profile.following ? 'Following' : 'Not following'}\n                />\n            </Reveal.Content>\n            <Reveal.Content hidden style={{width: '100%'}}>\n                <Button\n                    fluid\n                    basic\n                    color={profile.following ? 'red' : 'green'}\n                    content={profile.following ? 'Unfollow' : 'Follow'}\n                    loading={loading}\n                    onClick={(e) => handleFollow(e, profile.username)}\n                />\n            </Reveal.Content>\n        </Reveal>\n    )\n})\n","import React from \"react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport {Link} from \"react-router-dom\";\nimport { Card, Image, Icon } from \"semantic-ui-react\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileCard({profile}: Props) {\n    return (\n        <Card as={Link} to={`/profiles/${profile.username}`}>\n            <Image src={profile.image || '/assets/user.png'} />\n            <Card.Content>\n                <Card.Header>{profile.displayName}</Card.Header>\n                <Card.Description>Bio goes here</Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <Icon name={'user'} />\n                {profile.followersCount} followers\n            </Card.Content>\n            <FollowButton profile={profile} />\n        </Card>\n    )\n})\n","import React from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Image, List, Popup} from \"semantic-ui-react\";\nimport {Profile} from \"../../../app/models/profile\";\nimport {Link} from \"react-router-dom\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n    attendees: Profile[]\n}\n\nexport default observer(function  ActivityListItemAttendee({attendees}: Props) {\n    const styles = {\n        borderColor: 'orange',\n        borderWidth: 2\n    }\n    return (\n        <List horizontal>\n            {attendees.map(attendee => (\n                <Popup\n                    hoverable\n                    key={attendee.username}\n                    trigger={\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n                            <Image\n                                size={'mini'}\n                                circular src={attendee.image || '/assets/user.png'}\n                                bordered\n                                style={attendee.following ? styles : null }\n                            />\n                        </List.Item>\n                    }\n                >\n                    <Popup.Content>\n                        <ProfileCard profile={attendee} />\n                    </Popup.Content>\n                </Popup>\n\n            ))}\n        </List>\n    )\n})\n","import React from \"react\";\nimport {Button, Icon, Item, Label, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n    activity: Activity\n}\n\nexport default function ActivityListItem({activity}: Props) {\n\n    return (\n        <Segment.Group>\n            <Segment>\n                {activity.isCancelled &&\n                    <Label attached={'top'} color={'red'} content={'Cancelled'} style={{textAlign: 'center'}} />\n                }\n                <Item.Group>\n                    <Item>\n                        <Item.Image style={{marginBottom: 3}} size={'tiny'} circular src={activity.host?.image || '/assets/user.png'}/>\n                        <Item.Content>\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                                {activity.title}\n                            </Item.Header>\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\n                            </Item.Description>\n                            {activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color={'orange'}>\n                                        You are hosting this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                            {activity.isGoing && !activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color={'green'}>\n                                        You are going to this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n            <Segment>\n                <span>\n                    <Icon name={'clock'}/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                    <Icon name={'marker'}/> {activity.venue}\n                </span>\n            </Segment>\n            <Segment secondary>\n                <ActivityListItemAttendee attendees={activity.attendees!}/>\n            </Segment>\n            <Segment clearing>\n                <span>{activity.description}</span>\n                <Button\n                    as={Link}\n                    to={`/activities/${activity.id}`}\n                    color={'teal'}\n                    floated={'right'}\n                    content={'View'}\n                />\n            </Segment>\n        </Segment.Group>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {Header} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n    const {activityStore} = useStore();\n    const {groupedActivities} = activityStore;\n\n    return (\n        <>\n            {groupedActivities.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color={'teal'}>\n                        {group}\n                    </Header>\n                    {activities.map(activity => (\n                        <ActivityListItem key={activity.id} activity={activity}/>\n                    ))}\n                </Fragment>\n            ))}\n        </>\n\n    )\n})\n","import React from \"react\";\nimport {Header, Menu} from \"semantic-ui-react\";\nimport Calendar from 'react-calendar';\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilter() {\n    const {activityStore: {predicate, setPredicate}} = useStore();\n\n    return (\n        <>\n            <Menu vertical size={'large'} style={{width: '100%', marginTop: 25}}>\n                <Header icon={'filter'} attached={\"top\"} color={'teal'} content={'Filters'}/>\n                <Menu.Item\n                    content={'All activities'}\n                    active={predicate.has('all')}\n                    onClick={() => setPredicate('all', 'true')}\n                />\n                <Menu.Item\n                    content={\"I'm going\"}\n                    active={predicate.has('isGoing')}\n                    onClick={() => setPredicate('isGoing', 'true')}\n                />\n                <Menu.Item\n                    content={\"I'm hosting\"}\n                    active={predicate.has('isHost')}\n                    onClick={() => setPredicate('isHost', 'true')}\n                />\n            </Menu>\n            <Header/>\n            <Calendar\n                onChange={(date: Date) => setPredicate('startDate', date)}\n                value={predicate.get('startDate') || new Date()}\n            />\n        </>\n    )\n})\n","import React, {Fragment} from 'react';\nimport {Segment, Button, Placeholder} from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{marginTop: 25}}>\n                <Segment.Group>\n                    <Segment style={{minHeight: 110}}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line/>\n                                <Placeholder.Line/>\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line/>\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line/>\n                            <Placeholder.Line/>\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{minHeight: 70}}/>\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View'/>\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import React, {useEffect, useState} from 'react';\nimport {Grid, Loader} from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityFilter from \"./ActivityFilters\";\nimport {PagingParams} from \"../../../app/models/pagination\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n    const {activityStore} = useStore();\n    const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n    const [loadingNext, setLoadingNext] = useState(false);\n\n    function handleGetNext() {\n        setLoadingNext(true);\n        setPagingParams(new PagingParams(pagination!.currentPage + 1));\n        loadActivities().then(() => setLoadingNext(false));\n    }\n\n    useEffect(() => {\n        if (activityRegistry.size <= 1) loadActivities();\n    }, [activityRegistry.size, loadActivities]);\n\n    return (\n        <Grid>\n            <Grid.Column width={'10'}>\n                {activityStore.loadingInitial && !loadingNext ? (\n                    <>\n                        <ActivityListItemPlaceholder/>\n                        <ActivityListItemPlaceholder/>\n                    </>\n                ) : (\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={handleGetNext}\n                        hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n                        initialLoad={false}\n                    >\n                        <ActivityList/>\n                    </InfiniteScroll>\n                )}\n            </Grid.Column>\n            <Grid.Column width={'6'}>\n                <ActivityFilter/>\n            </Grid.Column>\n            <Grid.Column width={10}>\n                <Loader active={loadingNext}/>\n            </Grid.Column>\n        </Grid>\n    )\n});\n","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n    const [field, meta] = useField(props.name);\n\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props}/>\n            {meta.touched && meta.error ? (\n                <Label basic color={'red'}>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    );\n}\n","import {ErrorMessage, Formik} from \"formik\";\nimport React from \"react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Button, Form, Header, Label} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function LoginForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.login(values).catch(error =>\n                setErrors({error: 'Invalid email or password'}))}\n        >\n            {({handleSubmit, isSubmitting, errors}) => (\n                <Form className={'ui form'} onSubmit={handleSubmit} autoComplete={'off'}>\n                    <Header as={'h2'} content={'Login to Reactivities'} color={'teal'} textAlign={'center'}/>\n                    <MyTextInput placeholder={'Email'} name={'email'}/>\n                    <MyTextInput placeholder={'Password'} name={'password'} type={'password'}/>\n                    <ErrorMessage\n                        name={'error'}\n                        render={() => <Label style={{marginBottom: 10}} basic color={'red'} content={errors.error} />}\n                    />\n                    <Button loading={isSubmitting} positive content={'Login'} type={'submit'} fluid/>\n                </Form>\n            )}\n        </Formik>\n    )\n})\n","import React from \"react\";\nimport {Message} from \"semantic-ui-react\";\n\ninterface Props {\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>\n                            {err}\n                        </Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}\n","import {ErrorMessage, Formik} from \"formik\";\nimport React from \"react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport {Button, Form, Header} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport * as Yup from 'yup';\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error =>\n                setErrors({error}))}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required(),\n                username: Yup.string().required(),\n                email: Yup.string().required().email(),\n                password: Yup.string().required(),\n            })}\n        >\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n                <Form className={'ui form error'} onSubmit={handleSubmit} autoComplete={'off'}>\n                    <Header as={'h2'} content={'Sign up to Reactivities'} color={'teal'} textAlign={'center'}/>\n                    <MyTextInput placeholder={'Display Name'} name={'displayName'}/>\n                    <MyTextInput placeholder={'Username'} name={'username'}/>\n                    <MyTextInput placeholder={'Email'} name={'email'}/>\n                    <MyTextInput placeholder={'Password'} name={'password'} type={'password'}/>\n                    <ErrorMessage\n                        name={'error'}\n                        render={() => <ValidationErrors errors={errors.error} />}\n                    />\n                    <Button disabled={!isValid || !dirty || isSubmitting}\n                            loading={isSubmitting} positive content={'Register'} type={'submit'} fluid/>\n                </Form>\n            )}\n        </Formik>\n    )\n})\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, Container, Header, Image, Segment} from \"semantic-ui-react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign={'center'} vertical className={'masthead'}>\n            <Container text>\n                <Header as={'h1'} inverted>\n                    <Image size={'massive'} src={'/assets/logo.png'} alt={'logo'} style={{marginBottom: 12}}/>\n                    Reactivities\n                </Header>\n                {userStore.isLoggedIn ? (\n                    <>\n                        <Header as={'h2'} inverted content={'Welcome to reactivities'}/>\n                        <Button as={Link} to={'/activities'} size={'huge'} inverted>\n                            Go to Activities!\n                        </Button>\n                    </>\n                ) : (\n                    <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size={'huge'} inverted>\n                            Login!\n                        </Button>\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size={'huge'} inverted>\n                            Register\n                        </Button>\n                    </>\n\n                )}\n            </Container>\n        </Segment>\n    )\n})\n","import React from \"react\";\nimport {Dimmer, Loader} from \"semantic-ui-react\";\n\ninterface Props {\n    inverted?: boolean\n    content: string\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    )\n}\n","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    label?: string;\n    rows: number;\n}\n\nexport default function MyTextArea(props: Props) {\n    const [field, meta] = useField(props.name);\n\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <textarea {...field} {...props}/>\n            {meta.touched && meta.error ? (\n                <Label basic color={'red'}>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    );\n}\n","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label, Select} from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n    const [field, meta, helpers] = useField(props.name);\n\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select\n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color={'red'}>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    );\n}\n","export const categoryOptions =  [\n    {text: 'Drinks', value: 'drinks'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Film', value: 'film'},\n    {text: 'Food', value: 'food'},\n    {text: 'Music', value: 'music'},\n    {text: 'Travel', value: 'travel'},\n]\n","import React from \"react\";\nimport {useField} from \"formik\";\nimport {Form, Label} from \"semantic-ui-react\";\nimport ReactDatePicker, {ReactDatePickerProps} from \"react-datepicker\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n    const [field, meta, helpers] = useField(props.name!);\n\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <ReactDatePicker\n                {...field}\n                {...props}\n                selected={(field.value && new Date(field.value)) || null}\n                onChange={value => helpers.setValue(value)}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color={'red'}>{meta.error}</Label>\n            ) : null}\n        </Form.Field>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport {v4 as uuid} from 'uuid';\nimport {Formik, Form} from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport {categoryOptions} from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport {ActivityFormValues} from \"../../../app/models/activity\";\n\nexport default observer(function ActivityForm() {\n    const history = useHistory();\n    const {activityStore} = useStore();\n    const {createActivity, updateActivity, loadActivity, loadingInitial} = activityStore;\n    const {id} = useParams<{ id: string }>();\n    const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n    const validationSchema = Yup.object({\n        title: Yup.string().required('The activity title is required'),\n        description: Yup.string().required('The activity description is required'),\n        category: Yup.string().required(),\n        date: Yup.string().required('Date is required').nullable(),\n        venue: Yup.string().required(),\n        city: Yup.string().required(),\n    })\n\n    useEffect(() => {\n        if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\n    }, [id, loadActivity]);\n\n    function handleFormSubmit(activity: ActivityFormValues) {\n        if (!activity.id) {\n            let newActivity = {\n                ...activity,\n                id: uuid()\n            }\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n        } else {\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\n        }\n    }\n\n    if (loadingInitial) return <LoadingComponent content={'Loading activity...'}/>\n\n    return (\n        <Segment clearing>\n            <Header content={'Activity Detail'} sub color={'teal'}/>\n            <Formik\n                validationSchema={validationSchema}\n                enableReinitialize\n                initialValues={activity}\n                onSubmit={values => handleFormSubmit(values)}>\n                {({handleSubmit, isValid, isSubmitting, dirty}) => (\n                    <Form className={'ui form'} onSubmit={handleSubmit} autoComplete={'off'}>\n                        <MyTextInput placeholder={'title'} name={'title'} />\n                        <MyTextArea rows={3} placeholder={'Description'} name={'description'}/>\n                        <MySelectInput options={categoryOptions} placeholder={'Category'} name={'category'}/>\n                        <MyDateInput\n                            placeholderText={'Date'}\n                            name={'date'}\n                            showTimeSelect\n                            timeCaption={'time'}\n                            dateFormat={'MMMM d, yyyy h:mm aa'}\n                        />\n                        <Header content={'Location Detail'} sub color={'teal'}/>\n                        <MyTextInput placeholder={'City'} name={'city'}/>\n                        <MyTextInput placeholder={'Venue'} name={'venue'}/>\n                        <Button\n                            disabled={isSubmitting || !dirty || !isValid }\n                            loading={isSubmitting}\n                            floated={'right'} positive type={'submit'} content={'Submit'}\n                        />\n                        <Button as={Link} to={'/activities'} floated={'right'} type={'button'} content={'Cancel'}/>\n                    </Form>\n                )}\n            </Formik>\n        </Segment>\n    )\n})\n","import {observer} from 'mobx-react-lite';\nimport React from 'react'\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {Link} from \"react-router-dom\";\nimport {format} from \"date-fns\";\nimport {useStore} from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedHeader({activity}: Props) {\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{padding: '0'}}>\n                {activity.isCancelled &&\n                    <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20}}\n                           ribbon color={'red'} content={'Cancelled'}/>\n                }\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{color: 'white'}}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                        <Button\n                            color={activity.isCancelled ? 'green' : 'red'}\n                            floated={'left'}\n                            basic\n                            content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n                            onClick={cancelActivityToggle}\n                            loading={loading}\n                        />\n                        <Button as={Link}\n                                disabled={activity.isCancelled}\n                                to={`/manage/${activity.id}`}\n                                color='orange'\n                                floated='right'>\n                            Manage Event\n                        </Button>\n                    </>\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button\n                        disabled={activity.isCancelled}\n                        loading={loading}\n                        onClick={updateAttendance}\n                        color='teal'>\n                        Join Activity\n                    </Button>\n                )}\n            </Segment>\n        </Segment.Group>\n    )\n})\n","import {observer} from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport {Activity} from \"../../../app/models/activity\";\nimport {format} from \"date-fns\";\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n            <span>\n              {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n            </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal'/>\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})\n","import {observer} from 'mobx-react-lite'\nimport React, {useEffect} from 'react'\nimport {Segment, Header, Comment, Loader} from 'semantic-ui-react'\nimport {useStore} from \"../../../app/stores/store\";\nimport {Formik, Form, Field, FieldProps} from \"formik\";\nimport * as Yup from 'yup';\nimport {formatDistanceToNow} from \"date-fns\";\n\ninterface Props {\n    activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\n    const {commentStore} = useStore();\n\n    useEffect(() => {\n        if (activityId) {\n            commentStore.createHubConnection(activityId);\n        }\n\n        return () => {\n            commentStore.clearComments();\n        }\n    }, [commentStore, activityId]);\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                attached='top'\n                inverted\n                color='teal'\n                style={{border: 'none'}}\n            >\n                <Header>Chat about this event</Header>\n            </Segment>\n            <Segment attached clearing>\n                <Formik\n                    onSubmit={(values, {resetForm}) =>\n                        commentStore.addComment(values).then(() => resetForm())}\n                    initialValues={{body: ''}}\n                    validationSchema={Yup.object({\n                        body: Yup.string().required()\n                    })}\n                >\n                    {({isSubmitting, isValid, handleSubmit}) => (\n                        <Form className={'ui form'}>\n                            <Field name={'body'}>\n                                {(props: FieldProps) => (\n                                    <div style={{position: 'relative'}}>\n                                        <Loader active={isSubmitting}/>\n                                        <textarea\n                                            placeholder={'Enter your comment (Enter to submit, SHIFT + enter for new line)'}\n                                            rows={2}\n                                            {...props.field}\n                                            onKeyPress={e => {\n                                                if (e.key === 'Enter' && e.shiftKey) {\n                                                    return;\n                                                }\n                                                if (e.key === 'Enter' && !e.shiftKey) {\n                                                    e.preventDefault();\n                                                    isValid && handleSubmit();\n                                                }\n                                            }}\n                                        />\n                                    </div>\n\n                                )}\n                            </Field>\n                        </Form>\n                    )}\n                </Formik>\n                <Comment.Group>\n                    {commentStore.comments.map(comment => (\n                        <Comment key={comment.id}>\n                            <Comment.Avatar src={comment.image || '/assets/user.png'}/>\n                            <Comment.Content>\n                                <Comment.Author as={'Link'} to={`/profiles/${comment.username}`}>\n                                    {comment.displayName}\n                                </Comment.Author>\n                                <Comment.Metadata>\n                                    <div>{formatDistanceToNow(comment.createdAt)}</div>\n                                </Comment.Metadata>\n                                <Comment.Text style={{whiteSpace: 'pre-wrap'}}>{comment.body}</Comment.Text>\n                            </Comment.Content>\n                        </Comment>\n                    ))}\n                </Comment.Group>\n            </Segment>\n        </>\n\n    )\n})\n","import React from 'react'\nimport {Segment, List, Label, Item, Image} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\nimport {observer} from 'mobx-react-lite'\nimport {Activity} from \"../../../app/models/activity\";\n\ninterface Props {\n    activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({activity: {attendees, host}}: Props) {\n    if (!attendees) return null;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{border: 'none'}}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item style={{position: 'relative'}} key={attendee.username}>\n                            {attendee.username === host?.username &&\n                                <Label\n                                  style={{position: 'absolute'}}\n                                  color='orange'\n                                  ribbon='right'\n                                >\n                                  Host\n                                </Label>\n                            }\n\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'}/>\n                            <Item.Content verticalAlign='middle'>\n                                <Item.Header as='h3'>\n                                    <Link to={`/profile/${attendee.username}`}>{attendee.displayName}</Link>\n                                </Item.Header>\n                                {attendee.following &&\n                                <Item.Extra style={{color: 'orange'}}>Following</Item.Extra>}\n                            </Item.Content>\n                        </Item>\n                    ))}\n                </List>\n            </Segment>\n        </>\n    )\n})\n","import React, {useEffect} from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport {useStore} from \"../../../app/stores/store\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport {useParams} from \"react-router-dom\";\nimport {observer} from \"mobx-react-lite\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nexport default observer(function ActivityDetails() {\n    const {activityStore} = useStore();\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSelectActivity} = activityStore;\n    const {id} = useParams<{ id: string }>();\n\n    useEffect(() => {\n        if (id) loadActivity(id);\n        return () => clearSelectActivity();\n    }, [id, loadActivity, clearSelectActivity]);\n\n    if (loadingInitial || !activity) return <LoadingComponent content={''}/>;\n\n    return (\n        <Grid>\n            <Grid.Column width={10}>\n                <ActivityDetailedHeader activity={activity}/>\n                <ActivityDetailedInfo activity={activity}/>\n                <ActivityDetailedChat activityId={activity.id}/>\n            </Grid.Column>\n            <Grid.Column width={6}>\n                <ActivityDetailedSidebar activity={activity}/>\n            </Grid.Column>\n        </Grid>\n    )\n})\n","import React, {useState} from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors &&\n                <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}\n","import React from 'react';\nimport {Button, Header, Icon, Segment} from \"semantic-ui-react\";\nimport {Link} from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name={'search'} />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to={'/activities'} primary>\n                    Return to activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}\n","import React from \"react\"\nimport {Container, Header, Segment} from \"semantic-ui-react\";\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\n\nexport default observer(function ServerError() {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as={'h1'} content={'Server Error'}/>\n            <Header sub as={'h5'} color={'red'} content={commonStore.error?.message}/>\n            {commonStore.error?.details &&\n            <Segment>\n              <Header as={'h4'} content={'Stack trace'} color={'teal'}/>\n              <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n            </Segment>\n            }\n        </Container>\n    )\n})\n","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../stores/store\";\nimport {Modal} from \"semantic-ui-react\";\n\nexport default observer( function ModalContainer() {\n    const {modalStore} = useStore();\n\n    return (\n        <Modal\n            open={modalStore.modal.open}\n            onClose={modalStore.closeModal}\n            size={'mini'}\n        >\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n})\n","import React from \"react\";\nimport {Divider, Grid, Header, Item, Segment, Statistic} from \"semantic-ui-react\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n    profile: Profile\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n    return (\n        <Segment>\n            <Grid>\n                <Grid.Column width={12}>\n                    <Item.Group>\n                        <Item>\n                            <Item.Image avatar size={'small'} src={profile.image || '/assets/user.png'}/>\n                            <Item.Content verticalAlign={'middle'}>\n                                <Header as={'h1'} content={profile.displayName}/>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Statistic.Group widths={2}>\n                        {profile.followersCount > 0 &&\n                        <Statistic label={'Followers'} value={profile.followersCount}/>}\n                        {profile.followingCount > 0 &&\n                        <Statistic label={'Following'} value={profile.followingCount}/>}\n                    </Statistic.Group>\n                    <Divider/>\n                    <FollowButton profile={profile} />\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n})\n","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport {Header, Icon} from \"semantic-ui-react\";\n\ninterface Props {\n    setFiles: (files: any) => void\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n    const dzStyles = {\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        textAlign: 'center' as 'center',\n        height: 200\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        setFiles(acceptedFiles.map((file:any) => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })))\n    }, [setFiles])\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n    return (\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n            <input {...getInputProps()} />\n            <Icon name={'upload'} size={'huge'} />\n            <Header content={'Drop image here'} />\n        </div>\n    )\n}\n","import React from \"react\";\nimport {Cropper} from \"react-cropper\";\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\n    return (\n        <Cropper\n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview={'.img-preview'}\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Grid, Header} from \"semantic-ui-react\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\n\ninterface Props {\n    loading: boolean,\n    uploadPhoto: (file: Blob) => void\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\n    const [files, setFiles] = useState<any>([]);\n    const [cropper, setCropper] = useState<Cropper>();\n\n    function onCrop() {\n        if (cropper) {\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n        }\n    }, [files]);\n\n    return (\n        <Grid>\n            <Grid.Column width={4}>\n                <Header sub color={'teal'} content={'Step 1 - Add Photo'}/>\n                <PhotoWidgetDropzone setFiles={setFiles}/>\n            </Grid.Column>\n            <Grid.Column width={1}/>\n            <Grid.Column width={4}>\n                <Header sub color={'teal'} content={'Step 2 - Resize image'}/>\n                {files && files.length > 0 && (\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\n                )}\n            </Grid.Column>\n            <Grid.Column width={1}/>\n            <Grid.Column width={4}>\n                <Header sub color={'teal'} content={'Step 3 - Preview & Upload'}/>\n                {files && files.length > 0 && (\n                    <>\n                        <div className={'img-preview'} style={{minHeight: 200, overflow: 'hidden'}}/>\n                        <Button.Group widths={2}>\n                            <Button loading={loading} onClick={onCrop} positive icon={'check'}/>\n                            <Button disabled={loading} onClick={() => setFiles([])} icon={'close'}/>\n                        </Button.Group>\n                    </>\n                )}\n            </Grid.Column>\n        </Grid>\n    )\n}\n","import React, {SyntheticEvent, useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Button, Card, Grid, Header, Image, Tab} from \"semantic-ui-react\";\nimport {Photo, Profile} from \"../../app/models/profile\";\nimport {useStore} from \"../../app/stores/store\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\n\ninterface Props {\n    profile: Profile\n}\n\nexport default observer(function ProfilePhotos({profile}: Props) {\n    const {\n        profileStore: {\n            isCurrentUser, uploadPhoto,\n            uploading, loading, setMainPhoto, deletePhoto\n        }\n    } = useStore();\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated={'left'} icon={'image'} content={'Photos'}/>\n                    {isCurrentUser && (\n                        <Button floated={'right'} basic\n                                content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                                onClick={() => setAddPhotoMode(!addPhotoMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    {addPhotoMode ? (\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\n                    ) : (\n                        <Card.Group itemsPerRow={5}>\n                            {profile.photos?.map(photo => (\n                                <Card key={photo.id}>\n                                    <Image src={photo.url}/>\n                                    {isCurrentUser && (\n                                        <Button.Group fluid widths={2}>\n                                            <Button\n                                                basic color={'green'}\n                                                content={'Main'}\n                                                name={'main' + photo.id}\n                                                disabled={photo.isMain}\n                                                loading={target === 'main' + photo.id && loading}\n                                                onClick={e => handleSetMainPhoto(photo, e)}\n                                            />\n                                            <Button\n                                                basic\n                                                color={'red'}\n                                                icon={'trash'}\n                                                loading={target ===  photo.id && loading}\n                                                onClick={e => handleDeletePhoto(photo, e)}\n                                                disabled={photo.isMain}\n                                                name={photo.id}\n                                            />\n                                        </Button.Group>\n                                    )}\n                                </Card>\n                            ))}\n                        </Card.Group>\n                    )}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})\n","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Card, Grid, Header, Tab} from \"semantic-ui-react\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n    const {profileStore} = useStore();\n    const {profile, followings, loadingFollowings, activeTab} = profileStore;\n\n    return (\n        <Tab.Pane loading={loadingFollowings}>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header\n                        floated={'left'}\n                        icon={'user'}\n                        content={activeTab === 3\n                            ? `People following ${profile?.displayName}`\n                            : `People ${profile?.displayName} is following`}\n                    />\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    <Card.Group itemsPerRow={4}>\n                        {followings.map(profile => (\n                            <ProfileCard key={profile.username} profile={profile}/>\n                        ))}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid>\n\n        </Tab.Pane>\n    )\n});\n","import React, {SyntheticEvent, useEffect} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {useStore} from \"../../app/stores/store\";\nimport {Card, Grid, Header, Image, Tab, TabProps} from \"semantic-ui-react\";\nimport {UserActivity} from \"../../app/models/profile\";\nimport {Link} from \"react-router-dom\";\nimport {format} from \"date-fns\";\n\nconst panes = [\n    {menuItem: 'Future Events', pane: {key: 'future'}},\n    {menuItem: 'Past Events', pane: {key: 'past'}},\n    {menuItem: 'Hosting', pane: {key: 'hosting'}},\n];\n\nexport default observer(function ProfileActivities() {\n    const {profileStore} = useStore();\n    const {\n        loadUserActivities,\n        profile,\n        loadingActivities,\n        userActivities\n    } = profileStore;\n\n    useEffect(() => {\n        loadUserActivities(profile!.username);\n    }, [loadUserActivities, profile]);\n\n    const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n        loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\n    }\n\n    return (\n        <Tab.Pane loading={loadingActivities}>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated={'left'} icon={'calendar'} content={'Activities'}/>\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    <Tab\n                        panes={panes}\n                        menu={{secondary: true, pointing: true}}\n                        onTabChange={(e, data) => handleTabChange(e, data)}\n                    />\n                    <br/>\n                    <Card.Group itemsPerRow={4}>\n                        {userActivities.map((activity: UserActivity) => (\n                            <Card\n                                as={Link}\n                                to={`/activities/${activity.id}`}\n                                key={activity.id}\n                            >\n                                <Image\n                                    src={`/assets/categoryImages/${activity.category}.jpg`}\n                                    style={{minHeight: 100, objectFit: 'cover'}}\n                                />\n                                <Card.Content>\n                                    <Card.Header textAlign={'center'}>{activity.title}</Card.Header>\n                                    <Card.Meta textAlign={'center'}>\n                                        <div>{format(new Date(activity.date), 'do LLL')}</div>\n                                        <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                                    </Card.Meta>\n                                </Card.Content>\n                            </Card>\n                        ))}\n                    </Card.Group>\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    );\n});\n","import React from \"react\";\nimport {Tab} from \"semantic-ui-react\";\nimport ProfilePhotos from \"./ProfilePhotos\";\nimport {Profile} from \"../../app/models/profile\";\nimport {observer} from \"mobx-react-lite\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport {useStore} from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\n\ninterface Props {\n    profile: Profile\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n    const {profileStore} = useStore();\n    const panes = [\n        {menuItem: 'About', render: () => <Tab.Pane>About Content</Tab.Pane>},\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/>},\n        {menuItem: 'Events', render: () => <ProfileActivities />},\n        {menuItem: 'Followers', render: () => <ProfileFollowings />},\n        {menuItem: 'Following', render: () => <ProfileFollowings />},\n    ];\n\n    return (\n        <Tab\n            menu={{fluid: true, vertical: true}}\n            menuPosition={'right'}\n            panes={panes}\n            onTabChange={(e, data) => profileStore.setActivityTab(data.activeIndex)}\n        />\n    )\n\n})\n","import React, {useEffect} from \"react\";\nimport {Grid} from \"semantic-ui-react\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileContent from \"./ProfileContent\";\nimport {observer} from \"mobx-react-lite\";\nimport {useParams} from \"react-router-dom\";\nimport {useStore} from \"../../app/stores/store\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nexport default observer(function ProfilePage() {\n    const {username} = useParams<{ username: string }>();\n    const {profileStore} = useStore();\n    const {loadingProfile, loadProfile, profile, setActivityTab} = profileStore;\n\n    useEffect(() => {\n        loadProfile(username);\n        return () => {\n            setActivityTab(0);\n        }\n    }, [loadProfile, username, setActivityTab]);\n\n    if (loadingProfile) return <LoadingComponent content={'Loading profile...'}/>\n\n    return (\n        <Grid>\n            <Grid.Column width={16}>\n                {profile &&\n                <>\n                  <ProfileHeader profile={profile}/>\n                  <ProfileContent profile={profile}/>\n                </>\n                }\n            </Grid.Column>\n        </Grid>\n    )\n})\n","import {useStore} from \"../stores/store\";\nimport {Redirect, Route, RouteComponentProps, RouteProps} from \"react-router-dom\";\nimport React from \"react\";\n\ninterface Props extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n    const {userStore: {isLoggedIn}} = useStore();\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to={'/'}/>}\n        />\n    )\n}\n","import React, {useEffect} from 'react';\nimport {Container} from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport {observer} from \"mobx-react-lite\";\nimport {Route, Switch, useLocation} from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport {ToastContainer} from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport {useStore} from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n    const location = useLocation();\n    const {commonStore, userStore} = useStore();\n\n    useEffect(() => {\n        if (commonStore.token) {\n            userStore.getUser().finally(() => commonStore.setAppLoaded());\n        } else {\n            commonStore.setAppLoaded();\n        }\n    }, [commonStore, userStore]);\n\n    if(!commonStore.appLoaded) return <LoadingComponent content={'Loading app ...'} />\n\n    return (\n        <>\n            <ToastContainer position={\"bottom-right\"} hideProgressBar/>\n            <ModalContainer />\n            <Route exact path={'/'} component={HomePage}/>\n            <Route\n                path={'/(.+)'}\n                render={() => (\n                    <>\n                        <NavBar/>\n                        <Container style={{marginTop: '7em'}}>\n                            <Switch>\n                                <PrivateRoute exact path={'/activities'} component={ActivityDashboard}/>\n                                <PrivateRoute path={'/activities/:id'} component={ActivityDetails}/>\n                                <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']}\n                                       component={ActivityForm}/>\n                                <PrivateRoute path={'/profiles/:username'} component={ProfilePage}/>\n                                <PrivateRoute path={'/errors'} component={TestErrors}/>\n                                <Route path={'/server-error'} component={ServerError}/>\n                                <Route component={NotFound}/>\n                            </Switch>\n                        </Container>\n                    </>\n                )}\n            />\n        </>\n    );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useEffect} from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './app/layout/styles.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store, StoreContext} from \"./app/stores/store\";\nimport {Router} from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n        <Router history={history}>\n            <ScrollToTop />\n            <App/>\n        </Router>\n    </StoreContext.Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}